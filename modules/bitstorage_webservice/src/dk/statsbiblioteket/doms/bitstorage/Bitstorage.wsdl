<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://bitstorage.doms.statsbiblioteket.dk"
                  xmlns:apachesoap="http://xml.apache.org/xml-soap"
                  xmlns:impl="http://bitstorage.doms.statsbiblioteket.dk"
                  xmlns:intf="http://bitstorage.doms.statsbiblioteket.dk"
                  xmlns:tns1="http://exceptions.bitstorage.doms.statsbiblioteket.dk"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <!-- WSDL for webservice for accessing DOMS bitstorage.
         WSDL created Oct 07, 2008 -->
    <wsdl:types>
        <schema elementFormDefault="qualified"
                targetNamespace="http://bitstorage.doms.statsbiblioteket.dk"
                xmlns="http://www.w3.org/2001/XMLSchema">
            <import namespace="http://exceptions.bitstorage.doms.statsbiblioteket.dk"/>
            <element name="uploadFile">
                <wsdl:documentation>
                    Element uploadFile specifies input to the uploadFile operation.
                </wsdl:documentation>
                <complexType>
                    <sequence>
                        <element name="fileName" type="xsd:string">
                            <wsdl:documentation>
                                fileName input element: The filename to store
                                the file by.
                            </wsdl:documentation>
                        </element>
                        <element name="localurl" type="xsd:anyURI">
                            <wsdl:documentation>
                                localurl input element: The url to where the
                                bitstorage webservice can get the file.
                            </wsdl:documentation>
                        </element>
                        <element name="provided_md5" type="xsd:string">
                            <wsdl:documentation>
                                provided_md5 input element: The locally
                                generated md5sum of the file.
                            </wsdl:documentation>
                        </element>
                    </sequence>
                </complexType>
            </element>
            <element name="uploadFileResponse">
                <wsdl:documentation>
                    Element uploadFileResponse specifies the response from the
                    uploadFile operation.
                </wsdl:documentation>
                <complexType>
                    <sequence>
                        <element name="uploadFileReturn" type="impl:BitstorageFile">
                            <wsdl:documentation>
                                uploadFileReturn element: A bitstorage file object,
                                detailing the characteristics and public url of the
                                uploaded file.
                            </wsdl:documentation>
                        </element>
                    </sequence>
                </complexType>
            </element>
            <complexType name="BitstorageFile">
                <wsdl:documentation>
                    The BitstorageFile complex type is the output from
                    the uploadFile operation. BitstorageFile can provide
                    characterization output, file name, public url,
                    md5 checksum, pronom ID and validation status.
                </wsdl:documentation>
                <sequence>
                    <element name="characterizationOutput" nillable="true" type="xsd:base64Binary"/>
                    <element name="fileName" nillable="true" type="xsd:string"/>
                    <element name="fileurl" nillable="true" type="xsd:anyURI"/>
                    <element name="md5CheckSum" nillable="true" type="xsd:string"/>
                    <element name="pronomID" nillable="true" type="xsd:string"/>
                    <element name="validationStatus" nillable="true" type="xsd:string"/>
                </sequence>
            </complexType>

            <element name="approveFile">
                <wsdl:documentation>
                    Element approveFile specifies input elements to the
                    approveFile operation.
                </wsdl:documentation>
                <complexType>
                    <sequence>
                        <element name="fileurl" type="xsd:anyURI">
                            <wsdl:documentation>
                                fileurl input element: The url to the file (in bitstorage).
                            </wsdl:documentation>
                        </element>
                        <element name="md5sum" type="xsd:string">
                            <wsdl:documentation>
                                md5sum input element: The md5sum of the file.
                            </wsdl:documentation>
                        </element>
                    </sequence>
                </complexType>
            </element>
            <element name="approveFileResponse">
                <wsdl:documentation>
                    Element approveFileResponse specifies a void response from the
                    approveFile operation.
                </wsdl:documentation>
                <complexType/>
            </element>

            <element name="disapproveFile">
                <wsdl:documentation>
                    Element disapproveFile specifies input elements to the
                    disapproveFile operation.
                </wsdl:documentation>
                <complexType>
                    <sequence>
                        <element name="fileurl" type="xsd:anyURI">
                            <wsdl:documentation>
                                fileurl input element: The url to the file (in bitstorage).
                            </wsdl:documentation>
                        </element>
                        <element name="md5sum" type="xsd:string">
                            <wsdl:documentation>
                                md5sum input element: The md5sum of the file.
                            </wsdl:documentation>
                        </element>
                    </sequence>
                </complexType>
            </element>
            <element name="disapproveFileResponse">
                <wsdl:documentation>
                    Element disapproveFileResponse specifies a void response
                    from the disapproveFile operation.
                </wsdl:documentation>
                <complexType/>
            </element>

            <element name="spaceLeft">
                <wsdl:documentation>
                    Element spaceLeft specifies _no_ input elements to the
                    spaceLeft operation.
                </wsdl:documentation>
                <complexType/>
            </element>
            <element name="spaceLeftResponse">
                <wsdl:documentation>
                    Element spaceLeftResponse specifies response from the
                    spaceLeft operation.
                </wsdl:documentation>
                <complexType>
                    <sequence>
                        <element name="spaceLeftReturn" type="xsd:long"/>
                    </sequence>
                </complexType>
            </element>

            <!-- The fault elements specify, the possible exceptions of the
                operations uploadFile, approveFile, disapproveFile, spaceLeft.
                The Exceptions are: CannotGetFile, InvalidFileName,
                CannotStoreFile, WrongChecksum, CharacterizationFailed,
                DifferentFileWithThatNameExist. -->
            <element name="fault" type="tns1:CannotGetFile"/>
            <element name="fault1" type="tns1:InvalidFileName"/>
            <element name="fault2" type="tns1:CannotStoreFile"/>
            <element name="fault3" type="tns1:WrongChecksum"/>
            <element name="fault4" type="tns1:CharacterizationFailed"/>
            <element name="fault5" type="tns1:DifferentFileWithThatNameExist"/>
            <element name="fault6" type="tns1:UnknownURI"/>
        </schema>

        <schema elementFormDefault="qualified"
                targetNamespace="http://exceptions.bitstorage.doms.statsbiblioteket.dk"
                xmlns="http://www.w3.org/2001/XMLSchema">
            <import namespace="http://bitstorage.doms.statsbiblioteket.dk"/>
            <complexType name="CannotGetFile">
                <wsdl:documentation>
                    Exception CannotGetFile is thrown if the service cannot get
                    the file from the localurl.
                </wsdl:documentation>
                <sequence>
                    <element name="message" nillable="true" type="xsd:string"/>
                </sequence>
            </complexType>
            <complexType name="InvalidFileName">
                <wsdl:documentation>
                    Exception InvalidFileName is thrown if the provided fileName
                    is invalid.
                </wsdl:documentation>
                <sequence>
                    <element name="message" nillable="true" type="xsd:string"/>
                </sequence>
            </complexType>
            <complexType name="CannotStoreFile">
                <wsdl:documentation>
                    Exception CannotStoreFile is thrown if the service cannot store
                    the file on the server.
                </wsdl:documentation>
                <sequence>
                    <element name="message" nillable="true" type="xsd:string"/>
                </sequence>
            </complexType>
            <complexType name="WrongChecksum">
                <wsdl:documentation>
                    Exception WrongChecksum is thrown if the provided checksum
                    does not match.
                </wsdl:documentation>
                <sequence>
                    <element name="message" nillable="true" type="xsd:string"/>
                </sequence>
            </complexType>
            <complexType name="CharacterizationFailed">
                <wsdl:documentation>
                    Exception CharacterizationFailed is thrown if the
                    characterization service failed somehow.
                </wsdl:documentation>
                <sequence>
                    <element name="s" nillable="true" type="xsd:string"/>
                </sequence>
            </complexType>
            <complexType name="DifferentFileWithThatNameExist">
                <wsdl:documentation>
                    Exception DifferentFileWithThatNameExist is thrown if there is
                    already a file with that name, but a different checksum.
                </wsdl:documentation>
                <sequence>
                    <element name="message" nillable="true" type="xsd:string"/>
                </sequence>
            </complexType>
            <complexType name="UnknownURI">
                <wsdl:documentation>
                    Exception UnknownURI is thrown if the URI is not known to this
                    bitstorage.
                </wsdl:documentation>
                <sequence/>
            </complexType>
        </schema>
    </wsdl:types>

    <wsdl:message name="spaceLeftRequest">
        <wsdl:part element="impl:spaceLeft" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="UnknownURI">
        <wsdl:part element="impl:fault6" name="fault"/>
    </wsdl:message>
    <wsdl:message name="CannotGetFile">
        <wsdl:part element="impl:fault" name="fault"/>
    </wsdl:message>
    <wsdl:message name="uploadFileResponse">
        <wsdl:part element="impl:uploadFileResponse" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="approveFileRequest">
        <wsdl:part element="impl:approveFile" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="DifferentFileWithThatNameExist">
        <wsdl:part element="impl:fault5" name="fault"/>
    </wsdl:message>
    <wsdl:message name="spaceLeftResponse">
        <wsdl:part element="impl:spaceLeftResponse" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="approveFileResponse">
        <wsdl:part element="impl:approveFileResponse" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="disapproveFileRequest">
        <wsdl:part element="impl:disapproveFile" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="uploadFileRequest">
        <wsdl:part element="impl:uploadFile" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="CharacterizationFailed">
        <wsdl:part element="impl:fault4" name="fault"/>
    </wsdl:message>
    <wsdl:message name="disapproveFileResponse">
        <wsdl:part element="impl:disapproveFileResponse" name="parameters"/>
    </wsdl:message>
    <wsdl:message name="CannotStoreFile">
        <wsdl:part element="impl:fault2" name="fault"/>
    </wsdl:message>
    <wsdl:message name="InvalidFileName">
        <wsdl:part element="impl:fault1" name="fault"/>
    </wsdl:message>
    <wsdl:message name="WrongChecksum">
        <wsdl:part element="impl:fault3" name="fault"/>
    </wsdl:message>

    <wsdl:portType name="TestBedBitstorage">
        <wsdl:operation name="uploadFile">
            <wsdl:documentation>
                Operation uploadFile uploads the provided file to the temporary
                area of bitstorage, giving it the provided file name.
                Returns the MD5 checksum of the file.
                The file is only uploaded to a temporary approve-area of
                the bitstorage, and needs to be approved by calling approveFile
                before it is actually moved to the permanent bitstorage.

                If you try to upload a file that is already there, it checks the
                provided md5 against the md5 of the file on the server. If they
                match, there is no upload, you just get the return about the file
                already there. If they do not match, an exception is thrown.
            </wsdl:documentation>
            <wsdl:input message="impl:uploadFileRequest" name="uploadFileRequest"/>
            <wsdl:output message="impl:uploadFileResponse" name="uploadFileResponse"/>
            <wsdl:fault message="impl:CannotGetFile" name="CannotGetFile"/>
            <wsdl:fault message="impl:CharacterizationFailed" name="CharacterizationFailed"/>
            <wsdl:fault message="impl:DifferentFileWithThatNameExist" name="DifferentFileWithThatNameExist"/>
            <wsdl:fault message="impl:CannotStoreFile" name="CannotStoreFile"/>
            <wsdl:fault message="impl:InvalidFileName" name="InvalidFileName"/>
            <wsdl:fault message="impl:WrongChecksum" name="WrongChecksum"/>
        </wsdl:operation>

        <wsdl:operation name="approveFile">
            <wsdl:documentation>
                Operation approveFile checks the earlier uploaded file against the
                provided checksum, and if this succeeds, and possibly other
                criteria are met, moves the file from the temporary area of
                bitstorage to the permanent bitstorage.

                If you call this method on an already approved file, with the
                correct checksum, nothing happens.
                If the checksum is wrong, you get an exception.
            </wsdl:documentation>
            <wsdl:input message="impl:approveFileRequest" name="approveFileRequest"/>
            <wsdl:output message="impl:approveFileResponse" name="approveFileResponse"/>
            <wsdl:fault message="impl:CannotStoreFile" name="CannotStoreFile"/>
            <wsdl:fault message="impl:WrongChecksum" name="WrongChecksum"/>
            <wsdl:fault message="impl:UnknownURI" name="UnknownURI"/>
        </wsdl:operation>

        <wsdl:operation name="disapproveFile">
            <wsdl:documentation>
                Operation disapproveFile deletes the named file from bitstorage.
                Only works for files that have not yet been approved.

                If the file is not in temporary bitstorage nothing happens.
            </wsdl:documentation>
            <wsdl:input message="impl:disapproveFileRequest" name="disapproveFileRequest"/>
            <wsdl:output message="impl:disapproveFileResponse" name="disapproveFileResponse"/>
            <wsdl:fault message="impl:WrongChecksum" name="WrongChecksum"/>
            <wsdl:fault message="impl:UnknownURI" name="UnknownURI"/>
        </wsdl:operation>

        <wsdl:operation name="spaceLeft">
            <wsdl:documentation>
                Operation spaceLeft returns the number of bytes left in bitstorage.
            </wsdl:documentation>
            <wsdl:input message="impl:spaceLeftRequest" name="spaceLeftRequest"/>
            <wsdl:output message="impl:spaceLeftResponse" name="spaceLeftResponse"/>
        </wsdl:operation>

    </wsdl:portType>

    <wsdl:binding name="BitstorageSoapBinding" type="impl:TestBedBitstorage">

        <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>

        <wsdl:operation name="uploadFile">
            <wsdlsoap:operation soapAction=""/>
            <wsdl:input name="uploadFileRequest">
                <wsdlsoap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="uploadFileResponse">
                <wsdlsoap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CannotGetFile">
                <wsdlsoap:fault name="CannotGetFile" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="CharacterizationFailed">
                <wsdlsoap:fault name="CharacterizationFailed" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="DifferentFileWithThatNameExist">
                <wsdlsoap:fault name="DifferentFileWithThatNameExist" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="CannotStoreFile">
                <wsdlsoap:fault name="CannotStoreFile" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="InvalidFileName">
                <wsdlsoap:fault name="InvalidFileName" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="WrongChecksum">
                <wsdlsoap:fault name="WrongChecksum" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>

        <wsdl:operation name="approveFile">
            <wsdlsoap:operation soapAction=""/>
            <wsdl:input name="approveFileRequest">
                <wsdlsoap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="approveFileResponse">
                <wsdlsoap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="CannotStoreFile">
                <wsdlsoap:fault name="CannotStoreFile" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="WrongChecksum">
                <wsdlsoap:fault name="WrongChecksum" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="UnknownURI">
                <wsdlsoap:fault name="UnknownURI" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>

        <wsdl:operation name="disapproveFile">
            <wsdlsoap:operation soapAction=""/>
            <wsdl:input name="disapproveFileRequest">
                <wsdlsoap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="disapproveFileResponse">
                <wsdlsoap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="WrongChecksum">
                <wsdlsoap:fault name="WrongChecksum" use="literal"/>
            </wsdl:fault>
            <wsdl:fault name="UnknownURI">
                <wsdlsoap:fault name="UnknownURI" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>

        <wsdl:operation name="spaceLeft">
            <wsdlsoap:operation soapAction=""/>
            <wsdl:input name="spaceLeftRequest">
                <wsdlsoap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="spaceLeftResponse">
                <wsdlsoap:body use="literal"/>
            </wsdl:output>
        </wsdl:operation>

    </wsdl:binding>

    <wsdl:service name="TestBedBitstorageService">
        <wsdl:documentation>
            Webservice for accessing DOMS TestBed Bitstorage.
            Working with the Bitstorage goes like this:

            Upload the provided file to the temporary area of bitstorage,
            giving it the provided file name.

            The file is only uploaded to a temporary approve-area of
            the bitstorage, and needs to be approved by calling approveFile before
            it is actually moved to the permanent bitstorage.

            If you try to upload a file that is already there, it checks the provided
            md5 against the md5 of the file on the server. If they match, there is no
            upload, you just get the return about the file already there.
            If they do not match, an exception is thrown.
        </wsdl:documentation>
        <wsdl:port binding="impl:BitstorageSoapBinding" name="Bitstorage">
            <wsdlsoap:address location="http://localhost:7910/Bitstorage/services/Bitstorage"/>
        </wsdl:port>
    </wsdl:service>

</wsdl:definitions>