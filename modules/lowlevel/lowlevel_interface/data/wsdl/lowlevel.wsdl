<?xml version='1.0' encoding='UTF-8'?>
<!--
  ~ $Id$
  ~ $Revision$
  ~ $Date$
  ~ $Author$
  ~
  ~ The DOMS project.
  ~ Copyright (C) 2007-2010  The State and University Library
  ~
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:tns="http://lowlevel.bitstorage.doms.statsbiblioteket.dk/"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns="http://schemas.xmlsoap.org/wsdl/"
             targetNamespace="http://lowlevel.bitstorage.doms.statsbiblioteket.dk/"
             name="LowlevelBitstorageSoapWebserviceService">
    <types>
        <xsd:schema>
            <xsd:import
                    namespace="http://lowlevel.bitstorage.doms.statsbiblioteket.dk/"
                    schemaLocation="lowlevel.xsd"/>
        </xsd:schema>
    </types>
    <message name="uploadFile">
        <part name="parameters" element="tns:uploadFile"/>
    </message>
    <message name="uploadFileResponse">
        <part name="parameters" element="tns:uploadFileResponse"/>
    </message>
    <message name="ChecksumFailedException">
        <part name="fault" element="tns:ChecksumFailedException"/>
    </message>
    <message name="FileAlreadyApprovedException">
        <part name="fault" element="tns:FileAlreadyApprovedException"/>
    </message>
    <message name="InvalidFileNameException">
        <part name="fault" element="tns:InvalidFileNameException"/>
    </message>
    <message name="CommunicationException">
        <part name="fault" element="tns:CommunicationException"/>
    </message>
    <message name="NotEnoughFreeSpaceException">
        <part name="fault" element="tns:NotEnoughFreeSpaceException"/>
    </message>
    <message name="FileIsLockedException">
        <part name="fault" element="tns:FileIsLockedException"/>
    </message>
    <message name="disapprove">
        <part name="parameters" element="tns:disapprove"/>
    </message>
    <message name="disapproveResponse">
        <part name="parameters" element="tns:disapproveResponse"/>
    </message>
    <message name="FileNotFoundException">
        <part name="fault" element="tns:FileNotFoundException"/>
    </message>
    <message name="approve">
        <part name="parameters" element="tns:approve"/>
    </message>
    <message name="approveResponse">
        <part name="parameters" element="tns:approveResponse"/>
    </message>

    <message name="spaceLeft">
        <part name="parameters" element="tns:spaceLeft"/>
    </message>
    <message name="spaceLeftResponse">
        <part name="parameters" element="tns:spaceLeftResponse"/>
    </message>
    <message name="getMaxFileSize">
        <part name="parameters" element="tns:getMaxFileSize"/>
    </message>
    <message name="getMaxFileSizeResponse">
        <part name="parameters" element="tns:getMaxFileSizeResponse"/>
    </message>

    <message name="getMd5">
        <part name="parameters" element="tns:getMd5"/>
    </message>
    <message name="getMd5Response">
        <part name="parameters" element="tns:getMd5Response"/>
    </message>
    <message name="isApproved">
        <part name="parameters" element="tns:isApproved"/>
    </message>
    <message name="isApprovedResponse">
        <part name="parameters" element="tns:isApprovedResponse"/>
    </message>
    <portType name="LowlevelBitstorageSoapWebservice">
        <documentation>Interface to the bitstorage system.
        </documentation>
        <operation name="uploadFile">
            <documentation>Upload the provided file to the temporary area of
                bitstorage, giving it
                the provided file name. Return the MD5 checksum of the file. The
                file is
                only uploaded to a temporary approve-area of the bitstorage, and
                needs to
                be approved by calling approveFile before it is actually moved
                to the
                permanent bitstorage.
            </documentation>
            <input message="tns:uploadFile"/>
            <output message="tns:uploadFileResponse"/>
            <fault message="tns:InvalidFileNameException"
                   name="InvalidFileNameException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault message="tns:ChecksumFailedException"
                   name="ChecksumFailedException"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:NotEnoughFreeSpaceException"
                   name="NotEnoughFreeSpaceException"/>
            <fault message="tns:FileIsLockedException"
                   name="FileIsLockedException"/>

        </operation>
        <operation name="disapprove">
            <documentation>Delete the named file from bitstorage. Only works for
                files that have not
                yet been approved.

                If the file is not in temporary bitstorage nothing happens.
            </documentation>
            <input message="tns:disapprove"/>
            <output message="tns:disapproveResponse"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:FileNotFoundException"
                   name="FileNotFoundException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault message="tns:FileIsLockedException"
                   name="FileIsLockedException"/>

        </operation>
        <operation name="approve">
            <documentation>Check the earlier uploaded file against the provided
                checksum, and if
                this succeeds, and possibly other criteria are met, move the
                file from
                the temporary area of bitstorage to the permanent bitstorage.

                If you call this method on an already approved file, with the
                correct
                checksum, nothing happens. If the checksum is wrong, you get an
                exception.
            </documentation>
            <input message="tns:approve"/>
            <output message="tns:approveResponse"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:FileNotFoundException"
                   name="FileNotFoundException"/>
            <fault message="tns:NotEnoughFreeSpaceException"
                   name="NotEnoughFreeSpaceException"/>
            <fault message="tns:ChecksumFailedException"
                   name="ChecksumFailedException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault message="tns:FileIsLockedException"
                   name="FileIsLockedException"/>

        </operation>

        <operation name="spaceLeft">
            <documentation>Return the number of bytes left in bitstorage.
            </documentation>
            <input message="tns:spaceLeft"/>
            <output message="tns:spaceLeftResponse"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
        </operation>
        <operation name="getMaxFileSize">
            <documentation>Return the number of bytes that is allocatable for a
                single file.
            </documentation>
            <input message="tns:getMaxFileSize"/>
            <output message="tns:getMaxFileSizeResponse"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
        </operation>
        <operation name="getMd5">
            <documentation>Get the server-calculated md5 of a file.
            </documentation>
            <input message="tns:getMd5"/>
            <output message="tns:getMd5Response"/>
            <fault message="tns:FileNotFoundException"
                   name="FileNotFoundException"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:FileIsLockedException"
                   name="FileIsLockedException"/>

        </operation>
        <operation name="isApproved">
            <documentation>Check if the url is of a approved file.
            </documentation>
            <input message="tns:isApproved"/>
            <output message="tns:isApprovedResponse"/>
            <fault message="tns:FileNotFoundException"
                   name="FileNotFoundException"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:FileIsLockedException"
                   name="FileIsLockedException"/>

        </operation>
    </portType>
    <binding name="LowlevelBitstorageSoapWebservicePortBinding"
             type="tns:LowlevelBitstorageSoapWebservice">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http"
                      style="document"/>
        <operation name="uploadFile">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="ChecksumFailedException">
                <soap:fault name="ChecksumFailedException" use="literal"/>
            </fault>
            <fault name="InvalidFileNameException">
                <soap:fault name="InvalidFileNameException" use="literal"/>
            </fault>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="NotEnoughFreeSpaceException">
                <soap:fault name="NotEnoughFreeSpaceException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>
        </operation>
        <operation name="disapprove">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>

            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="FileNotFoundException">
                <soap:fault name="FileNotFoundException" use="literal"/>
            </fault>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>

        </operation>
        <operation name="approve">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>

            </fault>
            <fault name="FileNotFoundException">
                <soap:fault name="FileNotFoundException" use="literal"/>
            </fault>
            <fault name="NotEnoughFreeSpaceException">
                <soap:fault name="NotEnoughFreeSpaceException" use="literal"/>
            </fault>
            <fault name="ChecksumFailedException">
                <soap:fault name="ChecksumFailedException" use="literal"/>
            </fault>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>

        </operation>
        <operation name="spaceLeft">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>

                <soap:body use="literal"/>
            </output>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
        </operation>
        <operation name="getMaxFileSize">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>

        </operation>
        <operation name="getMd5">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="FileNotFoundException">
                <soap:fault name="FileNotFoundException" use="literal"/>
            </fault>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>

        </operation>
        <operation name="isApproved">

            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="FileNotFoundException">
                <soap:fault name="FileNotFoundException" use="literal"/>
            </fault>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>
        </operation>
    </binding>
    <service name="LowlevelBitstorageSoapWebserviceService">
        <port name="LowlevelBitstorageSoapWebservicePort"
              binding="tns:LowlevelBitstorageSoapWebservicePortBinding">

            <soap:address
                    location="http://localhost:7910/lowlevelbitstorage/lowlevel/"/>
        </port>
    </service>
</definitions>