<?xml version='1.0' encoding='UTF-8'?>
<!--
  ~ $Id$
  ~ $Revision$
  ~ $Date$
  ~ $Author$
  ~
  ~ The DOMS project.
  ~ Copyright (C) 2007-2010  The State and University Library
  ~
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:tns="http://highlevel.bitstorage.doms.statsbiblioteket.dk/"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns="http://schemas.xmlsoap.org/wsdl/"
             targetNamespace="http://highlevel.bitstorage.doms.statsbiblioteket.dk/"
             name="HighlevelBitstorageSoapWebserviceService">
    <types>
        <xsd:schema>
            <xsd:import
                    namespace="http://highlevel.bitstorage.doms.statsbiblioteket.dk/"
                    schemaLocation="highlevel.xsd"/>
        </xsd:schema>
    </types>
    <message name="uploadFileToObjectFromPermanentURLWithCharacterisation">
        <part name="parameters"
              element="tns:uploadFileToObjectFromPermanentURLWithCharacterisation"/>
    </message>
    <message name="uploadFileToObjectFromPermanentURL">
        <part name="parameters"
              element="tns:uploadFileToObjectFromPermanentURL"/>
    </message>
    <message name="uploadFileToObjectWithCharacterisation">
        <part name="parameters"
              element="tns:uploadFileToObjectWithCharacterisation"/>
    </message>
    <message name="uploadFileToObject">
        <part name="parameters" element="tns:uploadFileToObject"/>
    </message>
    <message name="uploadFileToObjectResponse">
        <part name="parameters" element="tns:uploadFileToObjectResponse"/>
    </message>
    <message name="ChecksumFailedException">
        <part name="fault" element="tns:ChecksumFailedException"/>
    </message>
    <message name="FileAlreadyApprovedException">
        <part name="fault" element="tns:FileAlreadyApprovedException"/>
    </message>
    <message name="InvalidFilenameException">
        <part name="fault" element="tns:InvalidFilenameException"/>
    </message>
    <message name="CommunicationException">
        <part name="fault" element="tns:CommunicationException"/>
    </message>
    <message name="NotEnoughFreeSpaceException">
        <part name="fault" element="tns:NotEnoughFreeSpaceException"/>
    </message>
    <message name="FileObjectAlreadyInUseException">
        <part name="fault" element="tns:FileObjectAlreadyInUseException"/>
    </message>
    <message name="CharacterisationFailedException">
        <part name="fault" element="tns:CharacterisationFailedException"/>
    </message>
    <message name="ObjectNotFoundException">
        <part name="fault" element="tns:ObjectNotFoundException"/>
    </message>
    <message name="FileIsLockedException">
        <part name="fault" element="tns:FileIsLockedException"/>
    </message>


    <message name="delete">
        <part name="parameters" element="tns:delete"/>
    </message>
    <message name="deleteResponse">
        <part name="parameters" element="tns:deleteResponse"/>
    </message>
    <message name="FileNotFoundException">
        <part name="fault" element="tns:FileNotFoundException"/>
    </message>
    <message name="publish">
        <part name="parameters" element="tns:publish"/>
    </message>
    <message name="publishResponse">
        <part name="parameters" element="tns:publishResponse"/>
    </message>
    <!--
        <message name="status">
            <part name="parameters" element="tns:status"/>
        </message>
        <message name="statusResponse">
            <part name="results" element="tns:statusResponse"/>
        </message>

    -->

    <portType name="HighlevelBitstorageSoapWebservice">
        <documentation>Java interface the bitstorage system.
        </documentation>
        <operation
                name="uploadFileToObjectFromPermanentURLWithCharacterisation">
            <documentation>Attaches the provided permanent url to the given
                fedora
                file object. The provided characterisation is stored in the
                fedora object. This method basically short-circuit any checks we
                have in place.
            </documentation>
            <input message="tns:uploadFileToObjectFromPermanentURLWithCharacterisation"/>
            <output message="tns:uploadFileToObjectResponse"/>
            <fault message="tns:InvalidFilenameException"
                   name="InvalidFilenameException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault message="tns:ChecksumFailedException"
                   name="ChecksumFailedException"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:NotEnoughFreeSpaceException"
                   name="NotEnoughFreeSpaceException"/>
            <fault message="tns:FileObjectAlreadyInUseException"
                   name="FileObjectAlreadyInUseException"/>
            <fault message="tns:ObjectNotFoundException"
                   name="ObjectNotFoundException"/>
            <fault message="tns:CharacterisationFailedException"
                   name="CharacterisationFailedException"/>
            <fault name="FileIsLockedException"
                   message="tns:FileIsLockedException"/>
        </operation>


        <operation name="uploadFileToObjectFromPermanentURL">
            <documentation>Attaches the provided permanent url to the given
                fedora
                file object. The fedora object is then characterised by the
                characteriser.
            </documentation>
            <input message="tns:uploadFileToObjectFromPermanentURL"/>
            <output message="tns:uploadFileToObjectResponse"/>
            <fault message="tns:InvalidFilenameException"
                   name="InvalidFilenameException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault message="tns:ChecksumFailedException"
                   name="ChecksumFailedException"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:NotEnoughFreeSpaceException"
                   name="NotEnoughFreeSpaceException"/>
            <fault message="tns:FileObjectAlreadyInUseException"
                   name="FileObjectAlreadyInUseException"/>
            <fault message="tns:ObjectNotFoundException"
                   name="ObjectNotFoundException"/>
            <fault message="tns:CharacterisationFailedException"
                   name="CharacterisationFailedException"/>
            <fault name="FileIsLockedException"
                   message="tns:FileIsLockedException"/>
        </operation>


        <operation name="uploadFileToObjectWithCharacterisation">
            <documentation>Upload the provided file to the temporary area of
                bitstorage, giving it the provided file name. Return the MD5
                checksum of the file. The file is only uploaded to a temporary
                approve-area of the bitstorage, and needs to be approved by
                calling approveFile before it is actually moved to the permanent
                bitstorage. The object is not characterised, rather the provided
                characterisation is used.
            </documentation>
            <input message="tns:uploadFileToObjectWithCharacterisation"/>
            <output message="tns:uploadFileToObjectResponse"/>
            <fault message="tns:InvalidFilenameException"
                   name="InvalidFilenameException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault message="tns:ChecksumFailedException"
                   name="ChecksumFailedException"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:NotEnoughFreeSpaceException"
                   name="NotEnoughFreeSpaceException"/>
            <fault message="tns:FileObjectAlreadyInUseException"
                   name="FileObjectAlreadyInUseException"/>
            <fault message="tns:CharacterisationFailedException"
                   name="CharacterisationFailedException"/>

            <fault message="tns:ObjectNotFoundException"
                   name="ObjectNotFoundException"/>
            <fault name="FileIsLockedException"
                   message="tns:FileIsLockedException"/>
        </operation>
        <operation name="uploadFileToObject">
            <documentation>Upload the provided file to the temporary area of
                bitstorage, giving it the provided file name. Return the MD5
                checksum of the file. The file is only uploaded to a temporary
                approve-area of the bitstorage, and needs to be approved by
                calling approveFile before it is actually moved to the permanent
                bitstorage. The object is characterised by the characteriser.
            </documentation>
            <input message="tns:uploadFileToObject"/>
            <output message="tns:uploadFileToObjectResponse"/>
            <fault message="tns:InvalidFilenameException"
                   name="InvalidFilenameException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault message="tns:ChecksumFailedException"
                   name="ChecksumFailedException"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:NotEnoughFreeSpaceException"
                   name="NotEnoughFreeSpaceException"/>
            <fault message="tns:FileObjectAlreadyInUseException"
                   name="FileObjectAlreadyInUseException"/>
            <fault message="tns:CharacterisationFailedException"
                   name="CharacterisationFailedException"/>
            <fault message="tns:ObjectNotFoundException"
                   name="ObjectNotFoundException"/>
            <fault name="FileIsLockedException"
                   message="tns:FileIsLockedException"/>

        </operation>
        <operation name="delete">
            <documentation>Delete the named file from bitstorage. Only works for
                files that have not yet been publish.
            </documentation>
            <input message="tns:delete"/>
            <output message="tns:deleteResponse"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:FileNotFoundException"
                   name="FileNotFoundException"/>
            <fault message="tns:ObjectNotFoundException"
                   name="ObjectNotFoundException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault name="FileIsLockedException"
                   message="tns:FileIsLockedException"/>
        </operation>
        <operation name="publish">
            <documentation>Check the earlier uploaded file against the provided
                checksum, and if this succeeds, and possibly other criteria are
                met, move the file from the temporary area of bitstorage to the
                permanent bitstorage.

                If you call this method on an already approved file, with the
                correct
                checksum, nothing happens. If the checksum is wrong, you get an
                exception.
            </documentation>
            <input message="tns:publish"/>
            <output message="tns:publishResponse"/>
            <fault message="tns:CommunicationException"
                   name="CommunicationException"/>
            <fault message="tns:FileNotFoundException"
                   name="FileNotFoundException"/>
            <fault message="tns:NotEnoughFreeSpaceException"
                   name="NotEnoughFreeSpaceException"/>
            <fault message="tns:ChecksumFailedException"
                   name="ChecksumFailedException"/>
            <fault message="tns:ObjectNotFoundException"
                   name="ObjectNotFoundException"/>
            <fault message="tns:FileAlreadyApprovedException"
                   name="FileAlreadyApprovedException"/>
            <fault name="FileIsLockedException"
                   message="tns:FileIsLockedException"/>
        </operation>
        <!--
                <operation name="status">
                    <documentation>Gives the status of the bitstorage, including
                        running jobs and free space.
                    </documentation>
                    <input message="tns:status"/>
                    <output message="tns:statusResponse"/>
                    <fault message="tns:CommunicationException"
                           name="CommunicationException"/>
                </operation>
        -->

    </portType>
    <binding name="HighlevelBitstorageSoapWebservicePortBinding"
             type="tns:HighlevelBitstorageSoapWebservice">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http"
                      style="document"/>
        <operation
                name="uploadFileToObjectFromPermanentURLWithCharacterisation">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="ChecksumFailedException">
                <soap:fault name="ChecksumFailedException" use="literal"/>
            </fault>
            <fault name="InvalidFilenameException">
                <soap:fault name="InvalidFilenameException" use="literal"/>
            </fault>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="NotEnoughFreeSpaceException">
                <soap:fault name="NotEnoughFreeSpaceException" use="literal"/>
            </fault>
            <fault name="FileObjectAlreadyInUseException">
                <soap:fault name="FileObjectAlreadyInUseException"
                            use="literal"/>
            </fault>
            <fault name="CharacterisationFailedException">
                <soap:fault name="CharacterisationFailedException"
                            use="literal"/>
            </fault>

            <fault name="ObjectNotFoundException">
                <soap:fault name="ObjectNotFoundException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>

        </operation>
        <operation name="uploadFileToObjectWithCharacterisation">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="ChecksumFailedException">
                <soap:fault name="ChecksumFailedException" use="literal"/>
            </fault>
            <fault name="InvalidFilenameException">
                <soap:fault name="InvalidFilenameException" use="literal"/>
            </fault>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="NotEnoughFreeSpaceException">
                <soap:fault name="NotEnoughFreeSpaceException" use="literal"/>
            </fault>
            <fault name="FileObjectAlreadyInUseException">
                <soap:fault name="FileObjectAlreadyInUseException"
                            use="literal"/>
            </fault>
            <fault name="CharacterisationFailedException">
                <soap:fault name="CharacterisationFailedException"
                            use="literal"/>
            </fault>

            <fault name="ObjectNotFoundException">
                <soap:fault name="ObjectNotFoundException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>

        </operation>
        <operation name="uploadFileToObjectFromPermanentURL">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="ChecksumFailedException">
                <soap:fault name="ChecksumFailedException" use="literal"/>
            </fault>
            <fault name="InvalidFilenameException">
                <soap:fault name="InvalidFilenameException" use="literal"/>
            </fault>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="NotEnoughFreeSpaceException">
                <soap:fault name="NotEnoughFreeSpaceException" use="literal"/>
            </fault>
            <fault name="FileObjectAlreadyInUseException">
                <soap:fault name="FileObjectAlreadyInUseException"
                            use="literal"/>
            </fault>
            <fault name="CharacterisationFailedException">
                <soap:fault name="CharacterisationFailedException"
                            use="literal"/>
            </fault>
            <fault name="ObjectNotFoundException">
                <soap:fault name="ObjectNotFoundException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>

        </operation>


        <operation name="uploadFileToObject">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="ChecksumFailedException">
                <soap:fault name="ChecksumFailedException" use="literal"/>
            </fault>
            <fault name="InvalidFilenameException">
                <soap:fault name="InvalidFilenameException" use="literal"/>
            </fault>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="NotEnoughFreeSpaceException">
                <soap:fault name="NotEnoughFreeSpaceException" use="literal"/>
            </fault>
            <fault name="FileObjectAlreadyInUseException">
                <soap:fault name="FileObjectAlreadyInUseException"
                            use="literal"/>
            </fault>
            <fault name="CharacterisationFailedException">
                <soap:fault name="CharacterisationFailedException"
                            use="literal"/>
            </fault>
            <fault name="ObjectNotFoundException">
                <soap:fault name="ObjectNotFoundException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>

        </operation>
        <operation name="delete">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>

            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>
            </fault>
            <fault name="FileNotFoundException">
                <soap:fault name="FileNotFoundException" use="literal"/>
            </fault>
            <fault name="ObjectNotFoundException">
                <soap:fault name="ObjectNotFoundException" use="literal"/>
            </fault>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>


        </operation>
        <operation name="publish">
            <soap:operation soapAction=""/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="CommunicationException">
                <soap:fault name="CommunicationException" use="literal"/>

            </fault>
            <fault name="FileNotFoundException">
                <soap:fault name="FileNotFoundException" use="literal"/>
            </fault>
            <fault name="NotEnoughFreeSpaceException">
                <soap:fault name="NotEnoughFreeSpaceException" use="literal"/>
            </fault>
            <fault name="ChecksumFailedException">
                <soap:fault name="ChecksumFailedException" use="literal"/>
            </fault>
            <fault name="ObjectNotFoundException">
                <soap:fault name="ObjectNotFoundException" use="literal"/>
            </fault>
            <fault name="FileAlreadyApprovedException">
                <soap:fault name="FileAlreadyApprovedException" use="literal"/>
            </fault>
            <fault name="FileIsLockedException">
                <soap:fault name="FileIsLockedException" use="literal"/>
            </fault>


        </operation>
        <!--
                <operation name="status">
                    <soap:operation soapAction=""/>
                    <input>
                        <soap:body use="literal"/>
                    </input>
                    <output>
                        <soap:body use="literal"/>
                    </output>
                    <fault name="CommunicationException">
                        <soap:fault name="CommunicationException" use="literal"/>
                    </fault>
                </operation>
        -->

    </binding>
    <service name="HighlevelBitstorageSoapWebserviceService">
        <port name="HighlevelBitstorageSoapWebservicePort"
              binding="tns:HighlevelBitstorageSoapWebservicePortBinding">

            <soap:address
                    location="http://localhost:7910/highlevelbitstorage/highlevel/"/>
        </port>
    </service>
</definitions>