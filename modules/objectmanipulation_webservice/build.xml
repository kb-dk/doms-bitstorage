<project name="objectmanipulation_webservice"  basedir=".">

    <!-- Module specific properties -->
    <property file="build.properties" />

    <!-- Custom ant tasks -->
    <property name="antlib" value="antlib"/>
    <path id="antlib.classpath">
        <fileset dir="antlib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef resource="axis-tasks.properties" classpathref="antlib.classpath"/>

    <taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask"
             classpathref="antlib.classpath"/>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"
             classpathref="antlib.classpath"/>
    <taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"
             classpathref="antlib.classpath"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="antlib/ant-contrib.jar"/>
        </classpath>
    </taskdef>

    <property name="warfilename" value="doms-${ant.project.name}.war"/>

    <!--Local libraries-->
    <path id="jars.path">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset id="dependencies.set" dir="dependencies">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Global- and module specific libs -->
    <path id="global.libs.path">
        <pathelement location="${basedir}/../../lib"/>
    </path>

    <!-- Calculate global libs dir property from path -->
    <pathconvert refid="global.libs.path" property="global.libs.dir"/>

    <path id="used.global.libs.path">
        <fileset id="used.global.libs.set" dir="${global.libs.dir}">
            <include name="axis-1.4.0.jar"/>
            <include name="javaee-9.0.jar"/>
            <include name="commons-logging-1.0.4.jar"/>
            <include name="sbutil-0.3.0-20080131.jar"/>

            <!-- Fedora client -->
            <include name="fedora-client-3.0.jar"/>
            <include name="axis-1.4.0.jar"/>
            <include name="batik-all.jar"/>
            <include name="commons-codec-1.3.jar"/>
            <include name="commons-dbcp-1.2.1.jar"/>
            <include name="commons-discovery-0.2.jar"/>
            <include name="commons-httpclient-3.1-beta1.jar"/>
            <include name="commons-logging-1.1.jar"/>
            <include name="log4j-1.2.15.jar"/>
            <include name="commons-pool-1.2.jar"/>
            <include name="java-getopt-1.0.11.jar"/>
            <include name="jai_codec-1.1.2_01.jar"/>
            <include name="jai_core-1.1.2_01.jar"/>
            <include name="mail-1.3.3_01.jar"/>
            <include name="jaxrpc-1.1.jar"/>
            <include name="jhbasic-2.0_01.jar"/>
            <include name="jrdf-0.3.4.3.jar"/>
            <include name="openrdf-model.jar"/>
            <include name="openrdf-util.jar"/>
            <include name="saaj-1.2.jar"/>
            <include name="saxon.jar"/>
            <include name="slf4j-api-1.5.2.jar"/>
            <include name="slf4j-jdk14-1.5.2.jar"/>
            <include name="sunxacml-1.2.patched.jar"/>
            <include name="trippi-1.3.2-core.jar"/>
            <include name="wsdl4j-1.5.1.jar"/>
            <include name="xercesImpl.jar"/>
            <include name="xml-apis.jar"/>
            <include name="xmlpull-1_1_3_4a.jar"/>
            <include name="xpp3_min-1.1.3.4.K.jar"/>

            <!-- For use in generating a wsdl file -->
            <include name="axis2-java2wsdl-1.3-r562247.jar"/>
            <include name="activation-1.0.2.jar"/>

            <!-- To make serialization by AXIS work -->
            <include name="xalan-j_2_7_1-serializer.jar"/>
            <include name="xalan-j_2_7_1-xalan.jar"/>
            <include name="xalan-j_2_7_1-xercesImpl.jar"/>
            <include name="xalan-j_2_7_1-xml-apis.jar"/>
            <include name="xalan-j_2_7_1-xsltc.jar"/>
        </fileset>
    </path>

    <!-- Calculate used global libs dir property from path -->
    <pathconvert refid="used.global.libs.path" property="used.global.libs.dir"/>

    <target name="domsutils">
        <!-- Grab the jar file from that module -->
        <ant dir="../../domsutils/" antfile="build.xml" target="dist"/>
        <copy todir="dependencies">
            <fileset dir="../../domsutils/dist/" includes="*.jar"/>
        </copy>
    </target>


    <!-- Generate the necessary client classes for invokation of the
     bitstorage_webservice -->
    <!-- TODO: It would be better having this code generation done by the
    build script in the bitstorage_webservice module, and then invoked
    by subant or something like that-->
    <target name="generateHelperClasses">
        <property name="helperClassesDir" value="helperClasses"/>
        <delete dir="${helperClassesDir}"/>
        <mkdir dir="${helperClassesDir}"/>

        <axis-wsdl2java serverside="false"
                        output="${helperClassesDir}" testcase="false"
                        verbose="true"
                        url="../bitstorage_webservice/conf/Bitstorage.wsdl">
            <mapping namespace="http://axis.apache.org/ns/interop"
                     package="interop"/>
            <mapping
                    namespace="http://bitstorage.doms.statsbibliotekt.dk"
                    package="dk.statsbiblioteket.doms.bitstorage"/>
        </axis-wsdl2java>
    </target>


    <target name="compile" depends="clean, domsutils, generateHelperClasses"
            description="Compile all production classes, and copy properties to class dir">

        <mkdir dir="classes"/>

        <javac source="1.6" destdir="classes" debug="on"
               encoding="UTF-8">
            <src>
                <dirset dir=".">
                    <include name="src"/>
                    <include name="helperClasses"/>
                </dirset>
            </src>

            <classpath refid="jars.path"/>
            <classpath refid="used.global.libs.path"/>
        </javac>
        <copy todir="classes" >
            <fileset dir="config" includes="**/*"/>
            <fileset dir="src" includes="**/*.properties"/>
        </copy>

    </target>



    <target name="warfile" depends="compile" description="Pack the webdirectory into a warfile ready for deployment">
        <mkdir dir="dist"/>
        <war destfile="dist/${warfile}"
             webxml="web/WEB-INF/web.xml">
            <classes dir="classes"/>
            <lib refid="used.global.libs.set"/>
            <lib refid="dependencies.set"/>
            <lib dir="lib" includes="**"/>
            <webinf dir="web/WEB-INF" excludes="web.xml"/>
        </war>
    </target>


    <target name="clean">
        <delete dir="dist"/>
        <delete dir="classes"/>
        <delete dir="server/build"/>
        <mkdir dir="server/build"/>
    </target>

</project>
